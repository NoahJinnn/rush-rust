name: Create and publish a Docker image

on:
  push:
    branches:
      - "main"
    tags:
      - 'v*'
  pull_request:
    branches:
      - "main"
    types: [opened, closed]
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  CARGO_TERM_COLOR: always
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - nightly
    permissions:
      contents: read
      packages: write
    steps:
          - name: Checkout repository
            uses: actions/checkout@v3
          - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
          - run: rustup component add rustfmt

          - name: Cache
            id: cache-build
            uses: actions/cache@v3
            with:
              path: |
                ~/.cargo/bin/
                ~/.cargo/registry/index/
                ~/.cargo/registry/cache/
                ~/.cargo/git/db/
                target/
              key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

          - name: Docker meta
            id: meta
            uses: docker/metadata-action@v3
            with:
              images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
              tags: |
                type=ref,event=branch
                type=ref,event=pr
                type=semver,pattern={{version}}
                type=semver,pattern={{major}}.{{minor}}

          - name: Log in to the Container registry
            if: github.event.pull_request.merged
            uses: docker/login-action@v1
            with:
              registry: ${{ env.REGISTRY }}
              username: ${{ github.repository }}
              password: ${{ secrets.GITHUB_TOKEN }}

          - name: Build and push
            uses: docker/build-push-action@v2
            with:
              context: ./common_concept
              push: ${{ github.event.pull_request.merged }}
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}